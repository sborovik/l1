---
- hosts: all
  remote_user: ubuntu
  become: true
  vars:
    container_count: 2
    def_container_name: docker
    def_container_image: ubuntu
    def_container_command: sleep 1d
  tasks:
    - name: install dependencies
      apt:
        name: "{{item}}"
        state: present
        update_cache: yes
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
        - python3-pip
        - virtualenv
    - name: add GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: add docker repository to apt
      shell: add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    - name: install docker
      apt:
        name: "{{item}}"
        state: latest
        update_cache: yes
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
    - name: check docker is active
      service:
        name: docker
        state: started
        enabled: yes
    - name: Ensure group "docker" exists
      ansible.builtin.group:
        name: docker
        state: present
    - name: adding ubuntu to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes
    - name: Install docker-compose
      get_url:
        url: https://github.com/docker/compose/releases/download/v2.15.1/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: 'u+x,g+x'
    - name: Change file ownership, group and permissions
      ansible.builtin.file:
        path: /usr/local/bin/docker-compose
        owner: ubuntu
        group: ubuntu
    - name: Install Docker Module for Python
      pip:
        name: docker
    - name: Pull default Docker image
      community.docker.docker_image:
        name: "{{ def_container_image }}"
        source: pull
    - name: Create default containers
      community.docker.docker_container:
        name: "{{ def_container_name }}{{ item }}"
        image: "{{ def_container_image }}"
        command: "{{ def_container_command }}"
        state: present
      with_sequence: count={{ container_count }}
